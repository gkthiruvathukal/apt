#ifndef icnparse_h
#define icnparse_h

#include "apttype.h"

enum SemanticPhases {
  P_Declaration,
  P_Translation
};

enum NonterminalDefinitions {
  NT_Goal = 0,
  NT_decl = 1,
  NT_progtl = 2,
  NT_prog = 3,
  NT_sep = 4,
  NT_type = 5,
  NT_fieldlistopt = 6,
  NT_typetail = 7,
  NT_paramlist = 8,
  NT_globaldec = 9,
  NT_procdec = 10,
  NT_typedec = 11,
  NT_idlistd = 12,
  NT_idlistdtl = 13,
  NT_idlistptl = 14,
  NT_idlistp = 15,
  NT_fieldlist = 16,
  NT_fieldlisttl = 17,
  NT_header = 18,
  NT_locopt = 19,
  NT_initopt = 20,
  NT_seq = 21,
  NT_refopt = 22,
  NT_parameter = 23,
  NT_paramlisttl = 24,
  NT_localspec = 25,
  NT_localstl = 26,
  NT_locals = 27,
  NT_e = 28,
  NT_eopt = 29,
  NT_seqtl = 30,
  NT_e1 = 31,
  NT_e2 = 32,
  NT_e1tl = 33,
  NT_e3 = 34,
  NT_e2tl = 35,
  NT_e4 = 36,
  NT_e3tl = 37,
  NT_asgnop = 38,
  NT_e5 = 39,
  NT_e4tl = 40,
  NT_byopt = 41,
  NT_e6 = 42,
  NT_e5tl = 43,
  NT_e7 = 44,
  NT_e6tl = 45,
  NT_relop = 46,
  NT_e8 = 47,
  NT_e7tl = 48,
  NT_e9 = 49,
  NT_e8tl = 50,
  NT_addop = 51,
  NT_e10 = 52,
  NT_e9tl = 53,
  NT_mulop = 54,
  NT_e11 = 55,
  NT_e10tl = 56,
  NT_e12 = 57,
  NT_e11tl = 58,
  NT_uop = 59,
  NT_e13 = 60,
  NT_ek = 61,
  NT_e14 = 62,
  NT_e13tl = 63,
  NT_elist = 64,
  NT_rangetl = 65,
  NT_elisttl = 66,
  NT_doopt = 67,
  NT_elseopt = 68,
  NT_caselist = 69,
  NT_caseclause = 70,
  NT_caselisttl = 71,
  NT_kwdtl = 72,
  NT_lit = 73,

  APT_NonterminalCount = 74
};

enum TerminalDefinitions {
  T_EoF = 74,
  T_any = 75,
  T_int = 76,
  T_real = 77,
  T_string = 78,
  T_cset = 79,
  T_void = 80,
  T_id = 81,
  T_record = 82,
  T_lbrace = 83,
  T_rbrace = 84,
  T_union = 85,
  T_set = 86,
  T_of = 87,
  T_lbrack = 88,
  T_rbrack = 89,
  T_lparen = 90,
  T_rparen = 91,
  T_ref = 92,
  T_equal = 93,
  T_global = 94,
  T_colon = 95,
  T_external = 96,
  T_comma = 97,
  T_semico = 98,
  T_end = 99,
  T_procedure = 100,
  T_eol = 101,
  T_local = 102,
  T_static = 103,
  T_dynamic = 104,
  T_initial = 105,
  T_conjop = 106,
  T_scanop = 107,
  T_to = 108,
  T_by = 109,
  T_altop = 110,
  T_catop = 111,
  T_carat = 112,
  T_bslash = 113,
  T_coop = 114,
  T_castop = 115,
  T_dot = 116,
  T_pcolon = 117,
  T_mcolon = 118,
  T_repeat = 119,
  T_while = 120,
  T_until = 121,
  T_every = 122,
  T_if = 123,
  T_then = 124,
  T_case = 125,
  T_next = 126,
  T_break = 127,
  T_return = 128,
  T_suspend = 129,
  T_fail = 130,
  T_create = 131,
  T_do = 132,
  T_else = 133,
  T_defaultclause = 134,
  T_default = 135,
  T_lt = 136,
  T_lteq = 137,
  T_gt = 138,
  T_gteq = 139,
  T_noteq = 140,
  T_not = 141,
  T_bang = 142,
  T_star = 143,
  T_plus = 144,
  T_minus = 145,
  T_slash = 146,
  T_tilde = 147,
  T_pct = 148,
  T_starstar = 149,
  T_plusplus = 150,
  T_minusminus = 151,
  T_assign = 152,
  T_star_assign = 153,
  T_slash_assign = 154,
  T_pct_assign = 155,
  T_starstar_assign = 156,
  T_plus_assign = 157,
  T_minus_assign = 158,
  T_plusplus_assign = 159,
  T_minusminus_assign = 160,
  T_intcon = 161,
  T_radintcon = 162,
  T_realcon = 163,
  T_csetcon = 164,
  T_stringcon = 165,
  T_hexcon = 166,
  T_octcon = 167,

  APT_TerminalCount = 94
};

enum ActionDefinitions {
  A__Prologue = 168,
  A__Epilogue = 169,
  A__DeclList = 170,
  A__SimpleType = 171,
  A__UserType = 172,
  A__RecordType = 173,
  A__UnionType = 174,
  A__SetType = 175,
  A__ListType = 176,
  A__TableType = 177,
  A__ProcType = 178,
  A__RefType = 179,
  A__NestedType = 180,
  A__NoDecl = 181,
  A__TypeDef = 182,
  A__GlobDecl = 183,
  A__EnqueueFirstIdDecl = 184,
  A__EnqueueNextIdDecl = 185,
  A__EnqueueFirstIdProc = 186,
  A__EnqueueNextIdProc = 187,
  A__NoFields = 188,
  A__FirstField = 189,
  A__NextField = 190,
  A__EndFields = 191,
  A__ProcDecl = 192,
  A__LocalTable = 193,
  A__ProcHead = 194,
  A__EnqueueFirstParameter = 195,
  A__MakeQueueD = 196,
  A__EnqueueNextParameter = 197,
  A__ScrubParameter = 198,
  A__Ref = 199,
  A__NoRef = 200,
  A__Discard = 201,
  A__LocalDecl = 202,
  A__Initializer = 203,
  A__NoInitializer = 204,
  A__ExpSeqHead = 205,
  A__ExpSeqNext = 206,
  A__NoExp = 207,
  A__BinOp = 208,
  A__TerOp = 209,
  A__RelOp = 210,
  A__UnaryOp = 211,
  A__ProcCall = 212,
  A__Subscript = 213,
  A__Cast = 214,
  A__FieldRef = 215,
  A__Range = 216,
  A__NoRange = 217,
  A__NoExpSeq = 218,
  A__ExpSeqNext2 = 219,
  A__Repeat = 220,
  A__While = 221,
  A__Until = 222,
  A__Every = 223,
  A__Case = 224,
  A__Next = 225,
  A__Break = 226,
  A__Return = 227,
  A__Suspend = 228,
  A__Fail = 229,
  A__Create = 230,
  A__Do = 231,
  A__NoDo = 232,
  A__IfThenElse = 233,
  A__IfThen = 234,
  A__CaseListHead = 235,
  A__CaseListNext = 236,
  A__CaseClause = 237,
  A__DefaultClause = 238,
  A__NoCaseClause = 239,
  A__Parens = 240,
  A__ListCons = 241,
  A__Block = 242,
  A__Var = 243,
  A__Keyword = 244,
  A__ConstInt = 245,
  A__ConstRadix = 246,
  A__ConstReal = 247,
  A__ConstCset = 248,
  A__ConstString = 249,
  A__MakeQueue = 250,
  A__MoreLocalDecl = 251,
  A__NoIdList1 = 252,
  A__NoIdList2 = 253,
  A__NoInitList = 254,
  A__NoParameters = 255,

  APT_ActionCount = 88
};

#define NumberOfSymbols 256
#define NumberOfProductions 194
#define NumberOfPredictions 1816

#define NonterminalBase 0
#define NonterminalLimit 73
#define TerminalBase 74
#define TerminalLimit 167
#define ActionBase 168
#define ActionLimit 345

#define IsNonterminal(x) ((x) >= NonterminalBase && (x) <= NonterminalLimit)
#define IsTerminal(x) ((x) >= TerminalBase && (x) <= TerminalLimit)
#define IsAction(x) ((x) >= ActionBase && (x) <= ActionLimit)

extern _ActionTablePtrType ActionTable;
extern _PhaseTableType PhaseTable;
extern struct _PredictionTripleElement PredictionTriple[];
extern short PredictIndexTable[];
extern struct _ProductionTableElement ProductionTable[];
extern struct _SymbolTableElement SymbolTable[];
extern char *SemanticStackTypeTable[];
extern char *PhaseName[];

#endif /* icnparse_h */
